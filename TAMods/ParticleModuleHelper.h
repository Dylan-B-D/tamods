#pragma once

#include <string>
#include "SdkHeaders.h"

namespace ParticleModuleHelper
{
    // Copy every FRawDistributionVector and FRawDistributionFloat based on the module class
    void copyModuleTArrays(UParticleModule *&out, UParticleModule *&in);
    void freeModuleTArrays(UParticleModule *mod);
    // Copy a module based on the class, copies distribution vectors too
    void copyModule(UParticleModule *&out, UParticleModule *&in);

    // Getters and setters for lua bindings bitfields
    int ParticleModule_getbSpawnModule(const UParticleModule *mod);
    void ParticleModule_setbSpawnModule(UParticleModule *mod, int val);
    int ParticleModule_getbUpdateModule(const UParticleModule *mod);
    void ParticleModule_setbUpdateModule(UParticleModule *mod, int val);
    int ParticleModule_getbFinalUpdateModule(const UParticleModule *mod);
    void ParticleModule_setbFinalUpdateModule(UParticleModule *mod, int val);
    int ParticleModule_getbCurvesAsColor(const UParticleModule *mod);
    void ParticleModule_setbCurvesAsColor(UParticleModule *mod, int val);
    int ParticleModule_getb3DDrawMode(const UParticleModule *mod);
    void ParticleModule_setb3DDrawMode(UParticleModule *mod, int val);
    int ParticleModule_getbSupported3DDrawMode(const UParticleModule *mod);
    void ParticleModule_setbSupported3DDrawMode(UParticleModule *mod, int val);
    int ParticleModule_getbEnabled(const UParticleModule *mod);
    void ParticleModule_setbEnabled(UParticleModule *mod, int val);
    int ParticleModule_getbEditable(const UParticleModule *mod);
    void ParticleModule_setbEditable(UParticleModule *mod, int val);
    int ParticleModule_getLODDuplicate(const UParticleModule *mod);
    void ParticleModule_setLODDuplicate(UParticleModule *mod, int val);
    int ParticleModule_getbSupportsRandomSeed(const UParticleModule *mod);
    void ParticleModule_setbSupportsRandomSeed(UParticleModule *mod, int val);
    int ParticleModule_getbRequiresLoopingNotification(const UParticleModule *mod);
    void ParticleModule_setbRequiresLoopingNotification(UParticleModule *mod, int val);
    struct FColor *ParticleModule_getModuleEditorColor(const UParticleModule *mod);
    void ParticleModule_setModuleEditorColor(UParticleModule *mod, struct FColor val);
    int ParticleModuleAccelerationBase_getbAlwaysInWorldSpace(const UParticleModuleAccelerationBase *mod);
    void ParticleModuleAccelerationBase_setbAlwaysInWorldSpace(UParticleModuleAccelerationBase *mod, int val);
    struct FRawDistributionVector *ParticleModuleAcceleration_getAcceleration(const UParticleModuleAcceleration *mod);
    void ParticleModuleAcceleration_setAcceleration(UParticleModuleAcceleration *mod, struct FRawDistributionVector val);
    int ParticleModuleAcceleration_getbApplyOwnerScale(const UParticleModuleAcceleration *mod);
    void ParticleModuleAcceleration_setbApplyOwnerScale(UParticleModuleAcceleration *mod, int val);
    struct FRawDistributionVector *ParticleModuleAccelerationOverLifetime_getAccelOverLife(const UParticleModuleAccelerationOverLifetime *mod);
    void ParticleModuleAccelerationOverLifetime_setAccelOverLife(UParticleModuleAccelerationOverLifetime *mod, struct FRawDistributionVector val);
    struct FVector *ParticleModuleAttractorLine_getEndPoint0(const UParticleModuleAttractorLine *mod);
    void ParticleModuleAttractorLine_setEndPoint0(UParticleModuleAttractorLine *mod, struct FVector val);
    struct FVector *ParticleModuleAttractorLine_getEndPoint1(const UParticleModuleAttractorLine *mod);
    void ParticleModuleAttractorLine_setEndPoint1(UParticleModuleAttractorLine *mod, struct FVector val);
    struct FRawDistributionFloat *ParticleModuleAttractorLine_getRange(const UParticleModuleAttractorLine *mod);
    void ParticleModuleAttractorLine_setRange(UParticleModuleAttractorLine *mod, struct FRawDistributionFloat val);
    struct FRawDistributionFloat *ParticleModuleAttractorLine_getStrength(const UParticleModuleAttractorLine *mod);
    void ParticleModuleAttractorLine_setStrength(UParticleModuleAttractorLine *mod, struct FRawDistributionFloat val);
    struct FName *ParticleModuleAttractorParticle_getEmitterName(const UParticleModuleAttractorParticle *mod);
    void ParticleModuleAttractorParticle_setEmitterName(UParticleModuleAttractorParticle *mod, struct FName val);
    struct FRawDistributionFloat *ParticleModuleAttractorParticle_getRange(const UParticleModuleAttractorParticle *mod);
    void ParticleModuleAttractorParticle_setRange(UParticleModuleAttractorParticle *mod, struct FRawDistributionFloat val);
    int ParticleModuleAttractorParticle_getbStrengthByDistance(const UParticleModuleAttractorParticle *mod);
    void ParticleModuleAttractorParticle_setbStrengthByDistance(UParticleModuleAttractorParticle *mod, int val);
    int ParticleModuleAttractorParticle_getbAffectBaseVelocity(const UParticleModuleAttractorParticle *mod);
    void ParticleModuleAttractorParticle_setbAffectBaseVelocity(UParticleModuleAttractorParticle *mod, int val);
    int ParticleModuleAttractorParticle_getbRenewSource(const UParticleModuleAttractorParticle *mod);
    void ParticleModuleAttractorParticle_setbRenewSource(UParticleModuleAttractorParticle *mod, int val);
    int ParticleModuleAttractorParticle_getbInheritSourceVel(const UParticleModuleAttractorParticle *mod);
    void ParticleModuleAttractorParticle_setbInheritSourceVel(UParticleModuleAttractorParticle *mod, int val);
    struct FRawDistributionFloat *ParticleModuleAttractorParticle_getStrength(const UParticleModuleAttractorParticle *mod);
    void ParticleModuleAttractorParticle_setStrength(UParticleModuleAttractorParticle *mod, struct FRawDistributionFloat val);
    struct FRawDistributionVector *ParticleModuleAttractorPoint_getPosition(const UParticleModuleAttractorPoint *mod);
    void ParticleModuleAttractorPoint_setPosition(UParticleModuleAttractorPoint *mod, struct FRawDistributionVector val);
    struct FRawDistributionFloat *ParticleModuleAttractorPoint_getRange(const UParticleModuleAttractorPoint *mod);
    void ParticleModuleAttractorPoint_setRange(UParticleModuleAttractorPoint *mod, struct FRawDistributionFloat val);
    struct FRawDistributionFloat *ParticleModuleAttractorPoint_getStrength(const UParticleModuleAttractorPoint *mod);
    void ParticleModuleAttractorPoint_setStrength(UParticleModuleAttractorPoint *mod, struct FRawDistributionFloat val);
    int ParticleModuleAttractorPoint_getStrengthByDistance(const UParticleModuleAttractorPoint *mod);
    void ParticleModuleAttractorPoint_setStrengthByDistance(UParticleModuleAttractorPoint *mod, int val);
    int ParticleModuleAttractorPoint_getbAffectBaseVelocity(const UParticleModuleAttractorPoint *mod);
    void ParticleModuleAttractorPoint_setbAffectBaseVelocity(UParticleModuleAttractorPoint *mod, int val);
    int ParticleModuleAttractorPoint_getbOverrideVelocity(const UParticleModuleAttractorPoint *mod);
    void ParticleModuleAttractorPoint_setbOverrideVelocity(UParticleModuleAttractorPoint *mod, int val);
    int ParticleModuleAttractorPoint_getbUseWorldSpacePosition(const UParticleModuleAttractorPoint *mod);
    void ParticleModuleAttractorPoint_setbUseWorldSpacePosition(UParticleModuleAttractorPoint *mod, int val);
    struct FBeamModifierOptions *ParticleModuleBeamModifier_getPositionOptions(const UParticleModuleBeamModifier *mod);
    void ParticleModuleBeamModifier_setPositionOptions(UParticleModuleBeamModifier *mod, struct FBeamModifierOptions val);
    struct FRawDistributionVector *ParticleModuleBeamModifier_getPosition(const UParticleModuleBeamModifier *mod);
    void ParticleModuleBeamModifier_setPosition(UParticleModuleBeamModifier *mod, struct FRawDistributionVector val);
    struct FBeamModifierOptions *ParticleModuleBeamModifier_getTangentOptions(const UParticleModuleBeamModifier *mod);
    void ParticleModuleBeamModifier_setTangentOptions(UParticleModuleBeamModifier *mod, struct FBeamModifierOptions val);
    struct FRawDistributionVector *ParticleModuleBeamModifier_getTangent(const UParticleModuleBeamModifier *mod);
    void ParticleModuleBeamModifier_setTangent(UParticleModuleBeamModifier *mod, struct FRawDistributionVector val);
    int ParticleModuleBeamModifier_getbAbsoluteTangent(const UParticleModuleBeamModifier *mod);
    void ParticleModuleBeamModifier_setbAbsoluteTangent(UParticleModuleBeamModifier *mod, int val);
    struct FBeamModifierOptions *ParticleModuleBeamModifier_getStrengthOptions(const UParticleModuleBeamModifier *mod);
    void ParticleModuleBeamModifier_setStrengthOptions(UParticleModuleBeamModifier *mod, struct FBeamModifierOptions val);
    struct FRawDistributionFloat *ParticleModuleBeamModifier_getStrength(const UParticleModuleBeamModifier *mod);
    void ParticleModuleBeamModifier_setStrength(UParticleModuleBeamModifier *mod, struct FRawDistributionFloat val);
    int ParticleModuleBeamNoise_getbLowFreq_Enabled(const UParticleModuleBeamNoise *mod);
    void ParticleModuleBeamNoise_setbLowFreq_Enabled(UParticleModuleBeamNoise *mod, int val);
    int ParticleModuleBeamNoise_getbNRScaleEmitterTime(const UParticleModuleBeamNoise *mod);
    void ParticleModuleBeamNoise_setbNRScaleEmitterTime(UParticleModuleBeamNoise *mod, int val);
    int ParticleModuleBeamNoise_getbSmooth(const UParticleModuleBeamNoise *mod);
    void ParticleModuleBeamNoise_setbSmooth(UParticleModuleBeamNoise *mod, int val);
    int ParticleModuleBeamNoise_getbNoiseLock(const UParticleModuleBeamNoise *mod);
    void ParticleModuleBeamNoise_setbNoiseLock(UParticleModuleBeamNoise *mod, int val);
    int ParticleModuleBeamNoise_getbOscillate(const UParticleModuleBeamNoise *mod);
    void ParticleModuleBeamNoise_setbOscillate(UParticleModuleBeamNoise *mod, int val);
    int ParticleModuleBeamNoise_getbUseNoiseTangents(const UParticleModuleBeamNoise *mod);
    void ParticleModuleBeamNoise_setbUseNoiseTangents(UParticleModuleBeamNoise *mod, int val);
    int ParticleModuleBeamNoise_getbTargetNoise(const UParticleModuleBeamNoise *mod);
    void ParticleModuleBeamNoise_setbTargetNoise(UParticleModuleBeamNoise *mod, int val);
    int ParticleModuleBeamNoise_getbApplyNoiseScale(const UParticleModuleBeamNoise *mod);
    void ParticleModuleBeamNoise_setbApplyNoiseScale(UParticleModuleBeamNoise *mod, int val);
    struct FRawDistributionVector *ParticleModuleBeamNoise_getNoiseRange(const UParticleModuleBeamNoise *mod);
    void ParticleModuleBeamNoise_setNoiseRange(UParticleModuleBeamNoise *mod, struct FRawDistributionVector val);
    struct FRawDistributionFloat *ParticleModuleBeamNoise_getNoiseRangeScale(const UParticleModuleBeamNoise *mod);
    void ParticleModuleBeamNoise_setNoiseRangeScale(UParticleModuleBeamNoise *mod, struct FRawDistributionFloat val);
    struct FRawDistributionVector *ParticleModuleBeamNoise_getNoiseSpeed(const UParticleModuleBeamNoise *mod);
    void ParticleModuleBeamNoise_setNoiseSpeed(UParticleModuleBeamNoise *mod, struct FRawDistributionVector val);
    struct FRawDistributionFloat *ParticleModuleBeamNoise_getNoiseTangentStrength(const UParticleModuleBeamNoise *mod);
    void ParticleModuleBeamNoise_setNoiseTangentStrength(UParticleModuleBeamNoise *mod, struct FRawDistributionFloat val);
    struct FRawDistributionFloat *ParticleModuleBeamNoise_getNoiseScale(const UParticleModuleBeamNoise *mod);
    void ParticleModuleBeamNoise_setNoiseScale(UParticleModuleBeamNoise *mod, struct FRawDistributionFloat val);
    struct FName *ParticleModuleBeamSource_getSourceName(const UParticleModuleBeamSource *mod);
    void ParticleModuleBeamSource_setSourceName(UParticleModuleBeamSource *mod, struct FName val);
    int ParticleModuleBeamSource_getbSourceAbsolute(const UParticleModuleBeamSource *mod);
    void ParticleModuleBeamSource_setbSourceAbsolute(UParticleModuleBeamSource *mod, int val);
    int ParticleModuleBeamSource_getbLockSource(const UParticleModuleBeamSource *mod);
    void ParticleModuleBeamSource_setbLockSource(UParticleModuleBeamSource *mod, int val);
    int ParticleModuleBeamSource_getbLockSourceTangent(const UParticleModuleBeamSource *mod);
    void ParticleModuleBeamSource_setbLockSourceTangent(UParticleModuleBeamSource *mod, int val);
    int ParticleModuleBeamSource_getbLockSourceStength(const UParticleModuleBeamSource *mod);
    void ParticleModuleBeamSource_setbLockSourceStength(UParticleModuleBeamSource *mod, int val);
    struct FRawDistributionVector *ParticleModuleBeamSource_getSource(const UParticleModuleBeamSource *mod);
    void ParticleModuleBeamSource_setSource(UParticleModuleBeamSource *mod, struct FRawDistributionVector val);
    struct FRawDistributionVector *ParticleModuleBeamSource_getSourceTangent(const UParticleModuleBeamSource *mod);
    void ParticleModuleBeamSource_setSourceTangent(UParticleModuleBeamSource *mod, struct FRawDistributionVector val);
    struct FRawDistributionFloat *ParticleModuleBeamSource_getSourceStrength(const UParticleModuleBeamSource *mod);
    void ParticleModuleBeamSource_setSourceStrength(UParticleModuleBeamSource *mod, struct FRawDistributionFloat val);
    struct FName *ParticleModuleBeamTarget_getTargetName(const UParticleModuleBeamTarget *mod);
    void ParticleModuleBeamTarget_setTargetName(UParticleModuleBeamTarget *mod, struct FName val);
    struct FRawDistributionVector *ParticleModuleBeamTarget_getTarget(const UParticleModuleBeamTarget *mod);
    void ParticleModuleBeamTarget_setTarget(UParticleModuleBeamTarget *mod, struct FRawDistributionVector val);
    int ParticleModuleBeamTarget_getbTargetAbsolute(const UParticleModuleBeamTarget *mod);
    void ParticleModuleBeamTarget_setbTargetAbsolute(UParticleModuleBeamTarget *mod, int val);
    int ParticleModuleBeamTarget_getbLockTarget(const UParticleModuleBeamTarget *mod);
    void ParticleModuleBeamTarget_setbLockTarget(UParticleModuleBeamTarget *mod, int val);
    int ParticleModuleBeamTarget_getbLockTargetTangent(const UParticleModuleBeamTarget *mod);
    void ParticleModuleBeamTarget_setbLockTargetTangent(UParticleModuleBeamTarget *mod, int val);
    int ParticleModuleBeamTarget_getbLockTargetStength(const UParticleModuleBeamTarget *mod);
    void ParticleModuleBeamTarget_setbLockTargetStength(UParticleModuleBeamTarget *mod, int val);
    struct FRawDistributionVector *ParticleModuleBeamTarget_getTargetTangent(const UParticleModuleBeamTarget *mod);
    void ParticleModuleBeamTarget_setTargetTangent(UParticleModuleBeamTarget *mod, struct FRawDistributionVector val);
    struct FRawDistributionFloat *ParticleModuleBeamTarget_getTargetStrength(const UParticleModuleBeamTarget *mod);
    void ParticleModuleBeamTarget_setTargetStrength(UParticleModuleBeamTarget *mod, struct FRawDistributionFloat val);
    struct FRawDistributionFloat *ParticleModuleCameraOffset_getCameraOffset(const UParticleModuleCameraOffset *mod);
    void ParticleModuleCameraOffset_setCameraOffset(UParticleModuleCameraOffset *mod, struct FRawDistributionFloat val);
    int ParticleModuleCameraOffset_getbSpawnTimeOnly(const UParticleModuleCameraOffset *mod);
    void ParticleModuleCameraOffset_setbSpawnTimeOnly(UParticleModuleCameraOffset *mod, int val);
    struct FRawDistributionVector *ParticleModuleCollision_getDampingFactor(const UParticleModuleCollision *mod);
    void ParticleModuleCollision_setDampingFactor(UParticleModuleCollision *mod, struct FRawDistributionVector val);
    struct FRawDistributionVector *ParticleModuleCollision_getDampingFactorRotation(const UParticleModuleCollision *mod);
    void ParticleModuleCollision_setDampingFactorRotation(UParticleModuleCollision *mod, struct FRawDistributionVector val);
    struct FRawDistributionFloat *ParticleModuleCollision_getMaxCollisions(const UParticleModuleCollision *mod);
    void ParticleModuleCollision_setMaxCollisions(UParticleModuleCollision *mod, struct FRawDistributionFloat val);
    int ParticleModuleCollision_getbApplyPhysics(const UParticleModuleCollision *mod);
    void ParticleModuleCollision_setbApplyPhysics(UParticleModuleCollision *mod, int val);
    int ParticleModuleCollision_getbPawnsDoNotDecrementCount(const UParticleModuleCollision *mod);
    void ParticleModuleCollision_setbPawnsDoNotDecrementCount(UParticleModuleCollision *mod, int val);
    int ParticleModuleCollision_getbOnlyVerticalNormalsDecrementCount(const UParticleModuleCollision *mod);
    void ParticleModuleCollision_setbOnlyVerticalNormalsDecrementCount(UParticleModuleCollision *mod, int val);
    int ParticleModuleCollision_getbDropDetail(const UParticleModuleCollision *mod);
    void ParticleModuleCollision_setbDropDetail(UParticleModuleCollision *mod, int val);
    struct FRawDistributionFloat *ParticleModuleCollision_getParticleMass(const UParticleModuleCollision *mod);
    void ParticleModuleCollision_setParticleMass(UParticleModuleCollision *mod, struct FRawDistributionFloat val);
    struct FRawDistributionFloat *ParticleModuleCollision_getDelayAmount(const UParticleModuleCollision *mod);
    void ParticleModuleCollision_setDelayAmount(UParticleModuleCollision *mod, struct FRawDistributionFloat val);
    struct FRawDistributionVector *ParticleModuleColor_getStartColor(const UParticleModuleColor *mod);
    void ParticleModuleColor_setStartColor(UParticleModuleColor *mod, struct FRawDistributionVector val);
    struct FRawDistributionFloat *ParticleModuleColor_getStartAlpha(const UParticleModuleColor *mod);
    void ParticleModuleColor_setStartAlpha(UParticleModuleColor *mod, struct FRawDistributionFloat val);
    int ParticleModuleColor_getbClampAlpha(const UParticleModuleColor *mod);
    void ParticleModuleColor_setbClampAlpha(UParticleModuleColor *mod, int val);
    struct FParticleRandomSeedInfo *ParticleModuleColor_Seeded_getRandomSeedInfo(const UParticleModuleColor_Seeded *mod);
    void ParticleModuleColor_Seeded_setRandomSeedInfo(UParticleModuleColor_Seeded *mod, struct FParticleRandomSeedInfo val);
    struct FName *ParticleModuleColorByParameter_getColorParam(const UParticleModuleColorByParameter *mod);
    void ParticleModuleColorByParameter_setColorParam(UParticleModuleColorByParameter *mod, struct FName val);
    struct FColor *ParticleModuleColorByParameter_getDefaultColor(const UParticleModuleColorByParameter *mod);
    void ParticleModuleColorByParameter_setDefaultColor(UParticleModuleColorByParameter *mod, struct FColor val);
    struct FRawDistributionVector *ParticleModuleColorOverLife_getColorOverLife(const UParticleModuleColorOverLife *mod);
    void ParticleModuleColorOverLife_setColorOverLife(UParticleModuleColorOverLife *mod, struct FRawDistributionVector val);
    struct FRawDistributionFloat *ParticleModuleColorOverLife_getAlphaOverLife(const UParticleModuleColorOverLife *mod);
    void ParticleModuleColorOverLife_setAlphaOverLife(UParticleModuleColorOverLife *mod, struct FRawDistributionFloat val);
    int ParticleModuleColorOverLife_getbClampAlpha(const UParticleModuleColorOverLife *mod);
    void ParticleModuleColorOverLife_setbClampAlpha(UParticleModuleColorOverLife *mod, int val);
    struct FRawDistributionVector *ParticleModuleColorScaleOverDensity_getColorScaleOverDensity(const UParticleModuleColorScaleOverDensity *mod);
    void ParticleModuleColorScaleOverDensity_setColorScaleOverDensity(UParticleModuleColorScaleOverDensity *mod, struct FRawDistributionVector val);
    struct FRawDistributionFloat *ParticleModuleColorScaleOverDensity_getAlphaScaleOverDensity(const UParticleModuleColorScaleOverDensity *mod);
    void ParticleModuleColorScaleOverDensity_setAlphaScaleOverDensity(UParticleModuleColorScaleOverDensity *mod, struct FRawDistributionFloat val);
    struct FRawDistributionVector *ParticleModuleColorScaleOverLife_getColorScaleOverLife(const UParticleModuleColorScaleOverLife *mod);
    void ParticleModuleColorScaleOverLife_setColorScaleOverLife(UParticleModuleColorScaleOverLife *mod, struct FRawDistributionVector val);
    struct FRawDistributionFloat *ParticleModuleColorScaleOverLife_getAlphaScaleOverLife(const UParticleModuleColorScaleOverLife *mod);
    void ParticleModuleColorScaleOverLife_setAlphaScaleOverLife(UParticleModuleColorScaleOverLife *mod, struct FRawDistributionFloat val);
    int ParticleModuleColorScaleOverLife_getbEmitterTime(const UParticleModuleColorScaleOverLife *mod);
    void ParticleModuleColorScaleOverLife_setbEmitterTime(UParticleModuleColorScaleOverLife *mod, int val);
    TArray< struct FParticleEvent_GenerateInfo > *ParticleModuleEventGenerator_getEvents(const UParticleModuleEventGenerator *mod);
    void ParticleModuleEventGenerator_setEvents(UParticleModuleEventGenerator *mod, TArray< struct FParticleEvent_GenerateInfo > val);
    struct FName *ParticleModuleEventReceiverBase_getEventName(const UParticleModuleEventReceiverBase *mod);
    void ParticleModuleEventReceiverBase_setEventName(UParticleModuleEventReceiverBase *mod, struct FName val);
    int ParticleModuleEventReceiverKillParticles_getbStopSpawning(const UParticleModuleEventReceiverKillParticles *mod);
    void ParticleModuleEventReceiverKillParticles_setbStopSpawning(UParticleModuleEventReceiverKillParticles *mod, int val);
    struct FRawDistributionFloat *ParticleModuleEventReceiverSpawn_getSpawnCount(const UParticleModuleEventReceiverSpawn *mod);
    void ParticleModuleEventReceiverSpawn_setSpawnCount(UParticleModuleEventReceiverSpawn *mod, struct FRawDistributionFloat val);
    int ParticleModuleEventReceiverSpawn_getbUseParticleTime(const UParticleModuleEventReceiverSpawn *mod);
    void ParticleModuleEventReceiverSpawn_setbUseParticleTime(UParticleModuleEventReceiverSpawn *mod, int val);
    int ParticleModuleEventReceiverSpawn_getbUsePSysLocation(const UParticleModuleEventReceiverSpawn *mod);
    void ParticleModuleEventReceiverSpawn_setbUsePSysLocation(UParticleModuleEventReceiverSpawn *mod, int val);
    int ParticleModuleEventReceiverSpawn_getbInheritVelocity(const UParticleModuleEventReceiverSpawn *mod);
    void ParticleModuleEventReceiverSpawn_setbInheritVelocity(UParticleModuleEventReceiverSpawn *mod, int val);
    struct FRawDistributionVector *ParticleModuleEventReceiverSpawn_getInheritVelocityScale(const UParticleModuleEventReceiverSpawn *mod);
    void ParticleModuleEventReceiverSpawn_setInheritVelocityScale(UParticleModuleEventReceiverSpawn *mod, struct FRawDistributionVector val);
    struct FRawDistributionVector *ParticleModuleKillBox_getLowerLeftCorner(const UParticleModuleKillBox *mod);
    void ParticleModuleKillBox_setLowerLeftCorner(UParticleModuleKillBox *mod, struct FRawDistributionVector val);
    struct FRawDistributionVector *ParticleModuleKillBox_getUpperRightCorner(const UParticleModuleKillBox *mod);
    void ParticleModuleKillBox_setUpperRightCorner(UParticleModuleKillBox *mod, struct FRawDistributionVector val);
    int ParticleModuleKillBox_getbAbsolute(const UParticleModuleKillBox *mod);
    void ParticleModuleKillBox_setbAbsolute(UParticleModuleKillBox *mod, int val);
    int ParticleModuleKillBox_getbKillInside(const UParticleModuleKillBox *mod);
    void ParticleModuleKillBox_setbKillInside(UParticleModuleKillBox *mod, int val);
    struct FRawDistributionFloat *ParticleModuleKillHeight_getHeight(const UParticleModuleKillHeight *mod);
    void ParticleModuleKillHeight_setHeight(UParticleModuleKillHeight *mod, struct FRawDistributionFloat val);
    int ParticleModuleKillHeight_getbAbsolute(const UParticleModuleKillHeight *mod);
    void ParticleModuleKillHeight_setbAbsolute(UParticleModuleKillHeight *mod, int val);
    int ParticleModuleKillHeight_getbFloor(const UParticleModuleKillHeight *mod);
    void ParticleModuleKillHeight_setbFloor(UParticleModuleKillHeight *mod, int val);
    int ParticleModuleKillHeight_getbApplyPSysScale(const UParticleModuleKillHeight *mod);
    void ParticleModuleKillHeight_setbApplyPSysScale(UParticleModuleKillHeight *mod, int val);
    struct FRawDistributionFloat *ParticleModuleLifetime_getLifetime(const UParticleModuleLifetime *mod);
    void ParticleModuleLifetime_setLifetime(UParticleModuleLifetime *mod, struct FRawDistributionFloat val);
    struct FParticleRandomSeedInfo *ParticleModuleLifetime_Seeded_getRandomSeedInfo(const UParticleModuleLifetime_Seeded *mod);
    void ParticleModuleLifetime_Seeded_setRandomSeedInfo(UParticleModuleLifetime_Seeded *mod, struct FParticleRandomSeedInfo val);
    struct FRawDistributionVector *ParticleModuleLocation_getStartLocation(const UParticleModuleLocation *mod);
    void ParticleModuleLocation_setStartLocation(UParticleModuleLocation *mod, struct FRawDistributionVector val);
    struct FParticleRandomSeedInfo *ParticleModuleLocation_Seeded_getRandomSeedInfo(const UParticleModuleLocation_Seeded *mod);
    void ParticleModuleLocation_Seeded_setRandomSeedInfo(UParticleModuleLocation_Seeded *mod, struct FParticleRandomSeedInfo val);
    struct FVector *ParticleModuleLocationBoneSocket_getUniversalOffset(const UParticleModuleLocationBoneSocket *mod);
    void ParticleModuleLocationBoneSocket_setUniversalOffset(UParticleModuleLocationBoneSocket *mod, struct FVector val);
    TArray< struct FLocationBoneSocketInfo > *ParticleModuleLocationBoneSocket_getSourceLocations(const UParticleModuleLocationBoneSocket *mod);
    void ParticleModuleLocationBoneSocket_setSourceLocations(UParticleModuleLocationBoneSocket *mod, TArray< struct FLocationBoneSocketInfo > val);
    int ParticleModuleLocationBoneSocket_getbUpdatePositionEachFrame(const UParticleModuleLocationBoneSocket *mod);
    void ParticleModuleLocationBoneSocket_setbUpdatePositionEachFrame(UParticleModuleLocationBoneSocket *mod, int val);
    int ParticleModuleLocationBoneSocket_getbOrientMeshEmitters(const UParticleModuleLocationBoneSocket *mod);
    void ParticleModuleLocationBoneSocket_setbOrientMeshEmitters(UParticleModuleLocationBoneSocket *mod, int val);
    struct FName *ParticleModuleLocationBoneSocket_getSkelMeshActorParamName(const UParticleModuleLocationBoneSocket *mod);
    void ParticleModuleLocationBoneSocket_setSkelMeshActorParamName(UParticleModuleLocationBoneSocket *mod, struct FName val);
    struct FRawDistributionVector *ParticleModuleLocationDirect_getLocation(const UParticleModuleLocationDirect *mod);
    void ParticleModuleLocationDirect_setLocation(UParticleModuleLocationDirect *mod, struct FRawDistributionVector val);
    struct FRawDistributionVector *ParticleModuleLocationDirect_getLocationOffset(const UParticleModuleLocationDirect *mod);
    void ParticleModuleLocationDirect_setLocationOffset(UParticleModuleLocationDirect *mod, struct FRawDistributionVector val);
    struct FRawDistributionVector *ParticleModuleLocationDirect_getScaleFactor(const UParticleModuleLocationDirect *mod);
    void ParticleModuleLocationDirect_setScaleFactor(UParticleModuleLocationDirect *mod, struct FRawDistributionVector val);
    struct FRawDistributionVector *ParticleModuleLocationDirect_getDirection(const UParticleModuleLocationDirect *mod);
    void ParticleModuleLocationDirect_setDirection(UParticleModuleLocationDirect *mod, struct FRawDistributionVector val);
    struct FName *ParticleModuleLocationEmitter_getEmitterName(const UParticleModuleLocationEmitter *mod);
    void ParticleModuleLocationEmitter_setEmitterName(UParticleModuleLocationEmitter *mod, struct FName val);
    int ParticleModuleLocationEmitter_getInheritSourceVelocity(const UParticleModuleLocationEmitter *mod);
    void ParticleModuleLocationEmitter_setInheritSourceVelocity(UParticleModuleLocationEmitter *mod, int val);
    int ParticleModuleLocationEmitter_getbInheritSourceRotation(const UParticleModuleLocationEmitter *mod);
    void ParticleModuleLocationEmitter_setbInheritSourceRotation(UParticleModuleLocationEmitter *mod, int val);
    struct FName *ParticleModuleLocationEmitterDirect_getEmitterName(const UParticleModuleLocationEmitterDirect *mod);
    void ParticleModuleLocationEmitterDirect_setEmitterName(UParticleModuleLocationEmitterDirect *mod, struct FName val);
    int ParticleModuleLocationPrimitiveBase_getPositive_X(const UParticleModuleLocationPrimitiveBase *mod);
    void ParticleModuleLocationPrimitiveBase_setPositive_X(UParticleModuleLocationPrimitiveBase *mod, int val);
    int ParticleModuleLocationPrimitiveBase_getPositive_Y(const UParticleModuleLocationPrimitiveBase *mod);
    void ParticleModuleLocationPrimitiveBase_setPositive_Y(UParticleModuleLocationPrimitiveBase *mod, int val);
    int ParticleModuleLocationPrimitiveBase_getPositive_Z(const UParticleModuleLocationPrimitiveBase *mod);
    void ParticleModuleLocationPrimitiveBase_setPositive_Z(UParticleModuleLocationPrimitiveBase *mod, int val);
    int ParticleModuleLocationPrimitiveBase_getNegative_X(const UParticleModuleLocationPrimitiveBase *mod);
    void ParticleModuleLocationPrimitiveBase_setNegative_X(UParticleModuleLocationPrimitiveBase *mod, int val);
    int ParticleModuleLocationPrimitiveBase_getNegative_Y(const UParticleModuleLocationPrimitiveBase *mod);
    void ParticleModuleLocationPrimitiveBase_setNegative_Y(UParticleModuleLocationPrimitiveBase *mod, int val);
    int ParticleModuleLocationPrimitiveBase_getNegative_Z(const UParticleModuleLocationPrimitiveBase *mod);
    void ParticleModuleLocationPrimitiveBase_setNegative_Z(UParticleModuleLocationPrimitiveBase *mod, int val);
    int ParticleModuleLocationPrimitiveBase_getSurfaceOnly(const UParticleModuleLocationPrimitiveBase *mod);
    void ParticleModuleLocationPrimitiveBase_setSurfaceOnly(UParticleModuleLocationPrimitiveBase *mod, int val);
    int ParticleModuleLocationPrimitiveBase_getVelocity(const UParticleModuleLocationPrimitiveBase *mod);
    void ParticleModuleLocationPrimitiveBase_setVelocity(UParticleModuleLocationPrimitiveBase *mod, int val);
    struct FRawDistributionFloat *ParticleModuleLocationPrimitiveBase_getVelocityScale(const UParticleModuleLocationPrimitiveBase *mod);
    void ParticleModuleLocationPrimitiveBase_setVelocityScale(UParticleModuleLocationPrimitiveBase *mod, struct FRawDistributionFloat val);
    struct FRawDistributionVector *ParticleModuleLocationPrimitiveBase_getStartLocation(const UParticleModuleLocationPrimitiveBase *mod);
    void ParticleModuleLocationPrimitiveBase_setStartLocation(UParticleModuleLocationPrimitiveBase *mod, struct FRawDistributionVector val);
    int ParticleModuleLocationPrimitiveCylinder_getRadialVelocity(const UParticleModuleLocationPrimitiveCylinder *mod);
    void ParticleModuleLocationPrimitiveCylinder_setRadialVelocity(UParticleModuleLocationPrimitiveCylinder *mod, int val);
    struct FRawDistributionFloat *ParticleModuleLocationPrimitiveCylinder_getStartRadius(const UParticleModuleLocationPrimitiveCylinder *mod);
    void ParticleModuleLocationPrimitiveCylinder_setStartRadius(UParticleModuleLocationPrimitiveCylinder *mod, struct FRawDistributionFloat val);
    struct FRawDistributionFloat *ParticleModuleLocationPrimitiveCylinder_getStartHeight(const UParticleModuleLocationPrimitiveCylinder *mod);
    void ParticleModuleLocationPrimitiveCylinder_setStartHeight(UParticleModuleLocationPrimitiveCylinder *mod, struct FRawDistributionFloat val);
    struct FParticleRandomSeedInfo *ParticleModuleLocationPrimitiveCylinder_Seeded_getRandomSeedInfo(const UParticleModuleLocationPrimitiveCylinder_Seeded *mod);
    void ParticleModuleLocationPrimitiveCylinder_Seeded_setRandomSeedInfo(UParticleModuleLocationPrimitiveCylinder_Seeded *mod, struct FParticleRandomSeedInfo val);
    struct FRawDistributionFloat *ParticleModuleLocationPrimitiveSphere_getStartRadius(const UParticleModuleLocationPrimitiveSphere *mod);
    void ParticleModuleLocationPrimitiveSphere_setStartRadius(UParticleModuleLocationPrimitiveSphere *mod, struct FRawDistributionFloat val);
    struct FParticleRandomSeedInfo *ParticleModuleLocationPrimitiveSphere_Seeded_getRandomSeedInfo(const UParticleModuleLocationPrimitiveSphere_Seeded *mod);
    void ParticleModuleLocationPrimitiveSphere_Seeded_setRandomSeedInfo(UParticleModuleLocationPrimitiveSphere_Seeded *mod, struct FParticleRandomSeedInfo val);
    struct FRawDistributionVector *ParticleModuleSourceMovement_getSourceMovementScale(const UParticleModuleSourceMovement *mod);
    void ParticleModuleSourceMovement_setSourceMovementScale(UParticleModuleSourceMovement *mod, struct FRawDistributionVector val);
    TArray< struct FName > *ParticleModuleMaterialByParameter_getMaterialParameters(const UParticleModuleMaterialByParameter *mod);
    void ParticleModuleMaterialByParameter_setMaterialParameters(UParticleModuleMaterialByParameter *mod, TArray< struct FName > val);
    TArray< class UMaterialInterface* > *ParticleModuleMaterialByParameter_getDefaultMaterials(const UParticleModuleMaterialByParameter *mod);
    void ParticleModuleMaterialByParameter_setDefaultMaterials(UParticleModuleMaterialByParameter *mod, TArray< class UMaterialInterface* > val);
    TArray< class UMaterialInterface* > *ParticleModuleMeshMaterial_getMeshMaterials(const UParticleModuleMeshMaterial *mod);
    void ParticleModuleMeshMaterial_setMeshMaterials(UParticleModuleMeshMaterial *mod, TArray< class UMaterialInterface* > val);
    int ParticleModuleOrbitBase_getbUseEmitterTime(const UParticleModuleOrbitBase *mod);
    void ParticleModuleOrbitBase_setbUseEmitterTime(UParticleModuleOrbitBase *mod, int val);
    struct FRawDistributionVector *ParticleModuleOrbit_getOffsetAmount(const UParticleModuleOrbit *mod);
    void ParticleModuleOrbit_setOffsetAmount(UParticleModuleOrbit *mod, struct FRawDistributionVector val);
    struct FOrbitOptions *ParticleModuleOrbit_getOffsetOptions(const UParticleModuleOrbit *mod);
    void ParticleModuleOrbit_setOffsetOptions(UParticleModuleOrbit *mod, struct FOrbitOptions val);
    struct FRawDistributionVector *ParticleModuleOrbit_getRotationAmount(const UParticleModuleOrbit *mod);
    void ParticleModuleOrbit_setRotationAmount(UParticleModuleOrbit *mod, struct FRawDistributionVector val);
    struct FOrbitOptions *ParticleModuleOrbit_getRotationOptions(const UParticleModuleOrbit *mod);
    void ParticleModuleOrbit_setRotationOptions(UParticleModuleOrbit *mod, struct FOrbitOptions val);
    struct FRawDistributionVector *ParticleModuleOrbit_getRotationRateAmount(const UParticleModuleOrbit *mod);
    void ParticleModuleOrbit_setRotationRateAmount(UParticleModuleOrbit *mod, struct FRawDistributionVector val);
    struct FOrbitOptions *ParticleModuleOrbit_getRotationRateOptions(const UParticleModuleOrbit *mod);
    void ParticleModuleOrbit_setRotationRateOptions(UParticleModuleOrbit *mod, struct FOrbitOptions val);
    TArray< struct FEmitterDynamicParameter > *ParticleModuleParameterDynamic_getDynamicParams(const UParticleModuleParameterDynamic *mod);
    void ParticleModuleParameterDynamic_setDynamicParams(UParticleModuleParameterDynamic *mod, TArray< struct FEmitterDynamicParameter > val);
    struct FParticleRandomSeedInfo *ParticleModuleParameterDynamic_Seeded_getRandomSeedInfo(const UParticleModuleParameterDynamic_Seeded *mod);
    void ParticleModuleParameterDynamic_Seeded_setRandomSeedInfo(UParticleModuleParameterDynamic_Seeded *mod, struct FParticleRandomSeedInfo val);
    int ParticleModuleRequired_getbUseLocalSpace(const UParticleModuleRequired *mod);
    void ParticleModuleRequired_setbUseLocalSpace(UParticleModuleRequired *mod, int val);
    int ParticleModuleRequired_getbKillOnDeactivate(const UParticleModuleRequired *mod);
    void ParticleModuleRequired_setbKillOnDeactivate(UParticleModuleRequired *mod, int val);
    int ParticleModuleRequired_getbKillOnCompleted(const UParticleModuleRequired *mod);
    void ParticleModuleRequired_setbKillOnCompleted(UParticleModuleRequired *mod, int val);
    int ParticleModuleRequired_getbRequiresSorting(const UParticleModuleRequired *mod);
    void ParticleModuleRequired_setbRequiresSorting(UParticleModuleRequired *mod, int val);
    int ParticleModuleRequired_getbUseLegacyEmitterTime(const UParticleModuleRequired *mod);
    void ParticleModuleRequired_setbUseLegacyEmitterTime(UParticleModuleRequired *mod, int val);
    int ParticleModuleRequired_getbEmitterDurationUseRange(const UParticleModuleRequired *mod);
    void ParticleModuleRequired_setbEmitterDurationUseRange(UParticleModuleRequired *mod, int val);
    int ParticleModuleRequired_getbDurationRecalcEachLoop(const UParticleModuleRequired *mod);
    void ParticleModuleRequired_setbDurationRecalcEachLoop(UParticleModuleRequired *mod, int val);
    int ParticleModuleRequired_getbEmitterDelayUseRange(const UParticleModuleRequired *mod);
    void ParticleModuleRequired_setbEmitterDelayUseRange(UParticleModuleRequired *mod, int val);
    int ParticleModuleRequired_getbDelayFirstLoopOnly(const UParticleModuleRequired *mod);
    void ParticleModuleRequired_setbDelayFirstLoopOnly(UParticleModuleRequired *mod, int val);
    int ParticleModuleRequired_getbScaleUV(const UParticleModuleRequired *mod);
    void ParticleModuleRequired_setbScaleUV(UParticleModuleRequired *mod, int val);
    int ParticleModuleRequired_getbDirectUV(const UParticleModuleRequired *mod);
    void ParticleModuleRequired_setbDirectUV(UParticleModuleRequired *mod, int val);
    int ParticleModuleRequired_getbUseMaxDrawCount(const UParticleModuleRequired *mod);
    void ParticleModuleRequired_setbUseMaxDrawCount(UParticleModuleRequired *mod, int val);
    struct FRawDistributionFloat *ParticleModuleRequired_getSpawnRate(const UParticleModuleRequired *mod);
    void ParticleModuleRequired_setSpawnRate(UParticleModuleRequired *mod, struct FRawDistributionFloat val);
    TArray< struct FParticleBurst > *ParticleModuleRequired_getBurstList(const UParticleModuleRequired *mod);
    void ParticleModuleRequired_setBurstList(UParticleModuleRequired *mod, TArray< struct FParticleBurst > val);
    struct FVector *ParticleModuleRequired_getNormalsSphereCenter(const UParticleModuleRequired *mod);
    void ParticleModuleRequired_setNormalsSphereCenter(UParticleModuleRequired *mod, struct FVector val);
    struct FVector *ParticleModuleRequired_getNormalsCylinderDirection(const UParticleModuleRequired *mod);
    void ParticleModuleRequired_setNormalsCylinderDirection(UParticleModuleRequired *mod, struct FVector val);
    struct FRawDistributionVector *ParticleModuleMeshRotation_getStartRotation(const UParticleModuleMeshRotation *mod);
    void ParticleModuleMeshRotation_setStartRotation(UParticleModuleMeshRotation *mod, struct FRawDistributionVector val);
    int ParticleModuleMeshRotation_getbInheritParent(const UParticleModuleMeshRotation *mod);
    void ParticleModuleMeshRotation_setbInheritParent(UParticleModuleMeshRotation *mod, int val);
    struct FParticleRandomSeedInfo *ParticleModuleMeshRotation_Seeded_getRandomSeedInfo(const UParticleModuleMeshRotation_Seeded *mod);
    void ParticleModuleMeshRotation_Seeded_setRandomSeedInfo(UParticleModuleMeshRotation_Seeded *mod, struct FParticleRandomSeedInfo val);
    struct FRawDistributionFloat *ParticleModuleRotation_getStartRotation(const UParticleModuleRotation *mod);
    void ParticleModuleRotation_setStartRotation(UParticleModuleRotation *mod, struct FRawDistributionFloat val);
    struct FParticleRandomSeedInfo *ParticleModuleRotation_Seeded_getRandomSeedInfo(const UParticleModuleRotation_Seeded *mod);
    void ParticleModuleRotation_Seeded_setRandomSeedInfo(UParticleModuleRotation_Seeded *mod, struct FParticleRandomSeedInfo val);
    struct FRawDistributionFloat *ParticleModuleRotationOverLifetime_getRotationOverLife(const UParticleModuleRotationOverLifetime *mod);
    void ParticleModuleRotationOverLifetime_setRotationOverLife(UParticleModuleRotationOverLifetime *mod, struct FRawDistributionFloat val);
    int ParticleModuleRotationOverLifetime_getScale(const UParticleModuleRotationOverLifetime *mod);
    void ParticleModuleRotationOverLifetime_setScale(UParticleModuleRotationOverLifetime *mod, int val);
    struct FRawDistributionVector *ParticleModuleMeshRotationRate_getStartRotationRate(const UParticleModuleMeshRotationRate *mod);
    void ParticleModuleMeshRotationRate_setStartRotationRate(UParticleModuleMeshRotationRate *mod, struct FRawDistributionVector val);
    struct FParticleRandomSeedInfo *ParticleModuleMeshRotationRate_Seeded_getRandomSeedInfo(const UParticleModuleMeshRotationRate_Seeded *mod);
    void ParticleModuleMeshRotationRate_Seeded_setRandomSeedInfo(UParticleModuleMeshRotationRate_Seeded *mod, struct FParticleRandomSeedInfo val);
    struct FRawDistributionVector *ParticleModuleMeshRotationRateMultiplyLife_getLifeMultiplier(const UParticleModuleMeshRotationRateMultiplyLife *mod);
    void ParticleModuleMeshRotationRateMultiplyLife_setLifeMultiplier(UParticleModuleMeshRotationRateMultiplyLife *mod, struct FRawDistributionVector val);
    struct FRawDistributionVector *ParticleModuleMeshRotationRateOverLife_getRotRate(const UParticleModuleMeshRotationRateOverLife *mod);
    void ParticleModuleMeshRotationRateOverLife_setRotRate(UParticleModuleMeshRotationRateOverLife *mod, struct FRawDistributionVector val);
    int ParticleModuleMeshRotationRateOverLife_getbScaleRotRate(const UParticleModuleMeshRotationRateOverLife *mod);
    void ParticleModuleMeshRotationRateOverLife_setbScaleRotRate(UParticleModuleMeshRotationRateOverLife *mod, int val);
    struct FRawDistributionFloat *ParticleModuleRotationRate_getStartRotationRate(const UParticleModuleRotationRate *mod);
    void ParticleModuleRotationRate_setStartRotationRate(UParticleModuleRotationRate *mod, struct FRawDistributionFloat val);
    struct FParticleRandomSeedInfo *ParticleModuleRotationRate_Seeded_getRandomSeedInfo(const UParticleModuleRotationRate_Seeded *mod);
    void ParticleModuleRotationRate_Seeded_setRandomSeedInfo(UParticleModuleRotationRate_Seeded *mod, struct FParticleRandomSeedInfo val);
    struct FRawDistributionFloat *ParticleModuleRotationRateMultiplyLife_getLifeMultiplier(const UParticleModuleRotationRateMultiplyLife *mod);
    void ParticleModuleRotationRateMultiplyLife_setLifeMultiplier(UParticleModuleRotationRateMultiplyLife *mod, struct FRawDistributionFloat val);
    struct FRawDistributionVector *ParticleModuleSize_getStartSize(const UParticleModuleSize *mod);
    void ParticleModuleSize_setStartSize(UParticleModuleSize *mod, struct FRawDistributionVector val);
    struct FParticleRandomSeedInfo *ParticleModuleSize_Seeded_getRandomSeedInfo(const UParticleModuleSize_Seeded *mod);
    void ParticleModuleSize_Seeded_setRandomSeedInfo(UParticleModuleSize_Seeded *mod, struct FParticleRandomSeedInfo val);
    struct FRawDistributionVector *ParticleModuleSizeMultiplyLife_getLifeMultiplier(const UParticleModuleSizeMultiplyLife *mod);
    void ParticleModuleSizeMultiplyLife_setLifeMultiplier(UParticleModuleSizeMultiplyLife *mod, struct FRawDistributionVector val);
    int ParticleModuleSizeMultiplyLife_getMultiplyX(const UParticleModuleSizeMultiplyLife *mod);
    void ParticleModuleSizeMultiplyLife_setMultiplyX(UParticleModuleSizeMultiplyLife *mod, int val);
    int ParticleModuleSizeMultiplyLife_getMultiplyY(const UParticleModuleSizeMultiplyLife *mod);
    void ParticleModuleSizeMultiplyLife_setMultiplyY(UParticleModuleSizeMultiplyLife *mod, int val);
    int ParticleModuleSizeMultiplyLife_getMultiplyZ(const UParticleModuleSizeMultiplyLife *mod);
    void ParticleModuleSizeMultiplyLife_setMultiplyZ(UParticleModuleSizeMultiplyLife *mod, int val);
    struct FRawDistributionVector *ParticleModuleSizeMultiplyVelocity_getVelocityMultiplier(const UParticleModuleSizeMultiplyVelocity *mod);
    void ParticleModuleSizeMultiplyVelocity_setVelocityMultiplier(UParticleModuleSizeMultiplyVelocity *mod, struct FRawDistributionVector val);
    int ParticleModuleSizeMultiplyVelocity_getMultiplyX(const UParticleModuleSizeMultiplyVelocity *mod);
    void ParticleModuleSizeMultiplyVelocity_setMultiplyX(UParticleModuleSizeMultiplyVelocity *mod, int val);
    int ParticleModuleSizeMultiplyVelocity_getMultiplyY(const UParticleModuleSizeMultiplyVelocity *mod);
    void ParticleModuleSizeMultiplyVelocity_setMultiplyY(UParticleModuleSizeMultiplyVelocity *mod, int val);
    int ParticleModuleSizeMultiplyVelocity_getMultiplyZ(const UParticleModuleSizeMultiplyVelocity *mod);
    void ParticleModuleSizeMultiplyVelocity_setMultiplyZ(UParticleModuleSizeMultiplyVelocity *mod, int val);
    struct FRawDistributionVector *ParticleModuleSizeScale_getSizeScale(const UParticleModuleSizeScale *mod);
    void ParticleModuleSizeScale_setSizeScale(UParticleModuleSizeScale *mod, struct FRawDistributionVector val);
    int ParticleModuleSizeScale_getEnableX(const UParticleModuleSizeScale *mod);
    void ParticleModuleSizeScale_setEnableX(UParticleModuleSizeScale *mod, int val);
    int ParticleModuleSizeScale_getEnableY(const UParticleModuleSizeScale *mod);
    void ParticleModuleSizeScale_setEnableY(UParticleModuleSizeScale *mod, int val);
    int ParticleModuleSizeScale_getEnableZ(const UParticleModuleSizeScale *mod);
    void ParticleModuleSizeScale_setEnableZ(UParticleModuleSizeScale *mod, int val);
    struct FRawDistributionVector *ParticleModuleSizeScaleByTime_getSizeScaleByTime(const UParticleModuleSizeScaleByTime *mod);
    void ParticleModuleSizeScaleByTime_setSizeScaleByTime(UParticleModuleSizeScaleByTime *mod, struct FRawDistributionVector val);
    int ParticleModuleSizeScaleByTime_getbEnableX(const UParticleModuleSizeScaleByTime *mod);
    void ParticleModuleSizeScaleByTime_setbEnableX(UParticleModuleSizeScaleByTime *mod, int val);
    int ParticleModuleSizeScaleByTime_getbEnableY(const UParticleModuleSizeScaleByTime *mod);
    void ParticleModuleSizeScaleByTime_setbEnableY(UParticleModuleSizeScaleByTime *mod, int val);
    int ParticleModuleSizeScaleByTime_getbEnableZ(const UParticleModuleSizeScaleByTime *mod);
    void ParticleModuleSizeScaleByTime_setbEnableZ(UParticleModuleSizeScaleByTime *mod, int val);
    int ParticleModuleSpawnBase_getbProcessSpawnRate(const UParticleModuleSpawnBase *mod);
    void ParticleModuleSpawnBase_setbProcessSpawnRate(UParticleModuleSpawnBase *mod, int val);
    int ParticleModuleSpawnBase_getbProcessBurstList(const UParticleModuleSpawnBase *mod);
    void ParticleModuleSpawnBase_setbProcessBurstList(UParticleModuleSpawnBase *mod, int val);
    struct FRawDistributionFloat *ParticleModuleSpawn_getRate(const UParticleModuleSpawn *mod);
    void ParticleModuleSpawn_setRate(UParticleModuleSpawn *mod, struct FRawDistributionFloat val);
    struct FRawDistributionFloat *ParticleModuleSpawn_getRateScale(const UParticleModuleSpawn *mod);
    void ParticleModuleSpawn_setRateScale(UParticleModuleSpawn *mod, struct FRawDistributionFloat val);
    TArray< struct FParticleBurst > *ParticleModuleSpawn_getBurstList(const UParticleModuleSpawn *mod);
    void ParticleModuleSpawn_setBurstList(UParticleModuleSpawn *mod, TArray< struct FParticleBurst > val);
    struct FRawDistributionFloat *ParticleModuleSpawnPerUnit_getSpawnPerUnit(const UParticleModuleSpawnPerUnit *mod);
    void ParticleModuleSpawnPerUnit_setSpawnPerUnit(UParticleModuleSpawnPerUnit *mod, struct FRawDistributionFloat val);
    int ParticleModuleSpawnPerUnit_getbIgnoreSpawnRateWhenMoving(const UParticleModuleSpawnPerUnit *mod);
    void ParticleModuleSpawnPerUnit_setbIgnoreSpawnRateWhenMoving(UParticleModuleSpawnPerUnit *mod, int val);
    int ParticleModuleSpawnPerUnit_getbIgnoreMovementAlongX(const UParticleModuleSpawnPerUnit *mod);
    void ParticleModuleSpawnPerUnit_setbIgnoreMovementAlongX(UParticleModuleSpawnPerUnit *mod, int val);
    int ParticleModuleSpawnPerUnit_getbIgnoreMovementAlongY(const UParticleModuleSpawnPerUnit *mod);
    void ParticleModuleSpawnPerUnit_setbIgnoreMovementAlongY(UParticleModuleSpawnPerUnit *mod, int val);
    int ParticleModuleSpawnPerUnit_getbIgnoreMovementAlongZ(const UParticleModuleSpawnPerUnit *mod);
    void ParticleModuleSpawnPerUnit_setbIgnoreMovementAlongZ(UParticleModuleSpawnPerUnit *mod, int val);
    struct FRawDistributionFloat *ParticleModuleSubUV_getSubImageIndex(const UParticleModuleSubUV *mod);
    void ParticleModuleSubUV_setSubImageIndex(UParticleModuleSubUV *mod, struct FRawDistributionFloat val);
    int ParticleModuleSubUVMovie_getbUseEmitterTime(const UParticleModuleSubUVMovie *mod);
    void ParticleModuleSubUVMovie_setbUseEmitterTime(UParticleModuleSubUVMovie *mod, int val);
    struct FRawDistributionFloat *ParticleModuleSubUVMovie_getFrameRate(const UParticleModuleSubUVMovie *mod);
    void ParticleModuleSubUVMovie_setFrameRate(UParticleModuleSubUVMovie *mod, struct FRawDistributionFloat val);
    struct FRawDistributionVector *ParticleModuleSubUVDirect_getSubUVPosition(const UParticleModuleSubUVDirect *mod);
    void ParticleModuleSubUVDirect_setSubUVPosition(UParticleModuleSubUVDirect *mod, struct FRawDistributionVector val);
    struct FRawDistributionVector *ParticleModuleSubUVDirect_getSubUVSize(const UParticleModuleSubUVDirect *mod);
    void ParticleModuleSubUVDirect_setSubUVSize(UParticleModuleSubUVDirect *mod, struct FRawDistributionVector val);
    struct FRawDistributionVector *ParticleModuleSubUVSelect_getSubImageSelect(const UParticleModuleSubUVSelect *mod);
    void ParticleModuleSubUVSelect_setSubImageSelect(UParticleModuleSubUVSelect *mod, struct FRawDistributionVector val);
    struct FName *ParticleModuleTrailSource_getSourceName(const UParticleModuleTrailSource *mod);
    void ParticleModuleTrailSource_setSourceName(UParticleModuleTrailSource *mod, struct FName val);
    struct FRawDistributionFloat *ParticleModuleTrailSource_getSourceStrength(const UParticleModuleTrailSource *mod);
    void ParticleModuleTrailSource_setSourceStrength(UParticleModuleTrailSource *mod, struct FRawDistributionFloat val);
    int ParticleModuleTrailSource_getbLockSourceStength(const UParticleModuleTrailSource *mod);
    void ParticleModuleTrailSource_setbLockSourceStength(UParticleModuleTrailSource *mod, int val);
    int ParticleModuleTrailSource_getbInheritRotation(const UParticleModuleTrailSource *mod);
    void ParticleModuleTrailSource_setbInheritRotation(UParticleModuleTrailSource *mod, int val);
    TArray< struct FVector > *ParticleModuleTrailSource_getSourceOffsetDefaults(const UParticleModuleTrailSource *mod);
    void ParticleModuleTrailSource_setSourceOffsetDefaults(UParticleModuleTrailSource *mod, TArray< struct FVector > val);
    struct FRawDistributionFloat *ParticleModuleTrailTaper_getTaperFactor(const UParticleModuleTrailTaper *mod);
    void ParticleModuleTrailTaper_setTaperFactor(UParticleModuleTrailTaper *mod, struct FRawDistributionFloat val);
    struct FName *ParticleModuleTypeDataAnimTrail_getControlEdgeName(const UParticleModuleTypeDataAnimTrail *mod);
    void ParticleModuleTypeDataAnimTrail_setControlEdgeName(UParticleModuleTypeDataAnimTrail *mod, struct FName val);
    int ParticleModuleTypeDataAnimTrail_getbDeadTrailsOnDeactivate(const UParticleModuleTypeDataAnimTrail *mod);
    void ParticleModuleTypeDataAnimTrail_setbDeadTrailsOnDeactivate(UParticleModuleTypeDataAnimTrail *mod, int val);
    int ParticleModuleTypeDataAnimTrail_getbClipSourceSegement(const UParticleModuleTypeDataAnimTrail *mod);
    void ParticleModuleTypeDataAnimTrail_setbClipSourceSegement(UParticleModuleTypeDataAnimTrail *mod, int val);
    int ParticleModuleTypeDataAnimTrail_getbEnablePreviousTangentRecalculation(const UParticleModuleTypeDataAnimTrail *mod);
    void ParticleModuleTypeDataAnimTrail_setbEnablePreviousTangentRecalculation(UParticleModuleTypeDataAnimTrail *mod, int val);
    int ParticleModuleTypeDataAnimTrail_getbTangentRecalculationEveryFrame(const UParticleModuleTypeDataAnimTrail *mod);
    void ParticleModuleTypeDataAnimTrail_setbTangentRecalculationEveryFrame(UParticleModuleTypeDataAnimTrail *mod, int val);
    int ParticleModuleTypeDataAnimTrail_getbRenderGeometry(const UParticleModuleTypeDataAnimTrail *mod);
    void ParticleModuleTypeDataAnimTrail_setbRenderGeometry(UParticleModuleTypeDataAnimTrail *mod, int val);
    int ParticleModuleTypeDataAnimTrail_getbRenderSpawnPoints(const UParticleModuleTypeDataAnimTrail *mod);
    void ParticleModuleTypeDataAnimTrail_setbRenderSpawnPoints(UParticleModuleTypeDataAnimTrail *mod, int val);
    int ParticleModuleTypeDataAnimTrail_getbRenderTangents(const UParticleModuleTypeDataAnimTrail *mod);
    void ParticleModuleTypeDataAnimTrail_setbRenderTangents(UParticleModuleTypeDataAnimTrail *mod, int val);
    int ParticleModuleTypeDataAnimTrail_getbRenderTessellation(const UParticleModuleTypeDataAnimTrail *mod);
    void ParticleModuleTypeDataAnimTrail_setbRenderTessellation(UParticleModuleTypeDataAnimTrail *mod, int val);
    struct FRawDistributionFloat *ParticleModuleTypeDataBeam_getDistance(const UParticleModuleTypeDataBeam *mod);
    void ParticleModuleTypeDataBeam_setDistance(UParticleModuleTypeDataBeam *mod, struct FRawDistributionFloat val);
    struct FRawDistributionVector *ParticleModuleTypeDataBeam_getEndPoint(const UParticleModuleTypeDataBeam *mod);
    void ParticleModuleTypeDataBeam_setEndPoint(UParticleModuleTypeDataBeam *mod, struct FRawDistributionVector val);
    struct FRawDistributionFloat *ParticleModuleTypeDataBeam_getEmitterStrength(const UParticleModuleTypeDataBeam *mod);
    void ParticleModuleTypeDataBeam_setEmitterStrength(UParticleModuleTypeDataBeam *mod, struct FRawDistributionFloat val);
    struct FRawDistributionFloat *ParticleModuleTypeDataBeam_getTargetStrength(const UParticleModuleTypeDataBeam *mod);
    void ParticleModuleTypeDataBeam_setTargetStrength(UParticleModuleTypeDataBeam *mod, struct FRawDistributionFloat val);
    struct FRawDistributionVector *ParticleModuleTypeDataBeam_getEndPointDirection(const UParticleModuleTypeDataBeam *mod);
    void ParticleModuleTypeDataBeam_setEndPointDirection(UParticleModuleTypeDataBeam *mod, struct FRawDistributionVector val);
    int ParticleModuleTypeDataBeam_getRenderGeometry(const UParticleModuleTypeDataBeam *mod);
    void ParticleModuleTypeDataBeam_setRenderGeometry(UParticleModuleTypeDataBeam *mod, int val);
    int ParticleModuleTypeDataBeam_getRenderDirectLine(const UParticleModuleTypeDataBeam *mod);
    void ParticleModuleTypeDataBeam_setRenderDirectLine(UParticleModuleTypeDataBeam *mod, int val);
    int ParticleModuleTypeDataBeam_getRenderLines(const UParticleModuleTypeDataBeam *mod);
    void ParticleModuleTypeDataBeam_setRenderLines(UParticleModuleTypeDataBeam *mod, int val);
    int ParticleModuleTypeDataBeam_getRenderTessellation(const UParticleModuleTypeDataBeam *mod);
    void ParticleModuleTypeDataBeam_setRenderTessellation(UParticleModuleTypeDataBeam *mod, int val);
    int ParticleModuleTypeDataBeam2_getbAlwaysOn(const UParticleModuleTypeDataBeam2 *mod);
    void ParticleModuleTypeDataBeam2_setbAlwaysOn(UParticleModuleTypeDataBeam2 *mod, int val);
    int ParticleModuleTypeDataBeam2_getRenderGeometry(const UParticleModuleTypeDataBeam2 *mod);
    void ParticleModuleTypeDataBeam2_setRenderGeometry(UParticleModuleTypeDataBeam2 *mod, int val);
    int ParticleModuleTypeDataBeam2_getRenderDirectLine(const UParticleModuleTypeDataBeam2 *mod);
    void ParticleModuleTypeDataBeam2_setRenderDirectLine(UParticleModuleTypeDataBeam2 *mod, int val);
    int ParticleModuleTypeDataBeam2_getRenderLines(const UParticleModuleTypeDataBeam2 *mod);
    void ParticleModuleTypeDataBeam2_setRenderLines(UParticleModuleTypeDataBeam2 *mod, int val);
    int ParticleModuleTypeDataBeam2_getRenderTessellation(const UParticleModuleTypeDataBeam2 *mod);
    void ParticleModuleTypeDataBeam2_setRenderTessellation(UParticleModuleTypeDataBeam2 *mod, int val);
    struct FName *ParticleModuleTypeDataBeam2_getBranchParentName(const UParticleModuleTypeDataBeam2 *mod);
    void ParticleModuleTypeDataBeam2_setBranchParentName(UParticleModuleTypeDataBeam2 *mod, struct FName val);
    struct FRawDistributionFloat *ParticleModuleTypeDataBeam2_getDistance(const UParticleModuleTypeDataBeam2 *mod);
    void ParticleModuleTypeDataBeam2_setDistance(UParticleModuleTypeDataBeam2 *mod, struct FRawDistributionFloat val);
    struct FRawDistributionFloat *ParticleModuleTypeDataBeam2_getTaperFactor(const UParticleModuleTypeDataBeam2 *mod);
    void ParticleModuleTypeDataBeam2_setTaperFactor(UParticleModuleTypeDataBeam2 *mod, struct FRawDistributionFloat val);
    struct FRawDistributionFloat *ParticleModuleTypeDataBeam2_getTaperScale(const UParticleModuleTypeDataBeam2 *mod);
    void ParticleModuleTypeDataBeam2_setTaperScale(UParticleModuleTypeDataBeam2 *mod, struct FRawDistributionFloat val);
    int ParticleModuleTypeDataMesh_getCastShadows(const UParticleModuleTypeDataMesh *mod);
    void ParticleModuleTypeDataMesh_setCastShadows(UParticleModuleTypeDataMesh *mod, int val);
    int ParticleModuleTypeDataMesh_getDoCollisions(const UParticleModuleTypeDataMesh *mod);
    void ParticleModuleTypeDataMesh_setDoCollisions(UParticleModuleTypeDataMesh *mod, int val);
    int ParticleModuleTypeDataMesh_getbAllowMotionBlur(const UParticleModuleTypeDataMesh *mod);
    void ParticleModuleTypeDataMesh_setbAllowMotionBlur(UParticleModuleTypeDataMesh *mod, int val);
    int ParticleModuleTypeDataMesh_getbOverrideMaterial(const UParticleModuleTypeDataMesh *mod);
    void ParticleModuleTypeDataMesh_setbOverrideMaterial(UParticleModuleTypeDataMesh *mod, int val);
    int ParticleModuleTypeDataMesh_getbCameraFacing(const UParticleModuleTypeDataMesh *mod);
    void ParticleModuleTypeDataMesh_setbCameraFacing(UParticleModuleTypeDataMesh *mod, int val);
    int ParticleModuleTypeDataMesh_getbApplyParticleRotationAsSpin(const UParticleModuleTypeDataMesh *mod);
    void ParticleModuleTypeDataMesh_setbApplyParticleRotationAsSpin(UParticleModuleTypeDataMesh *mod, int val);
    struct FPointer *ParticleModuleTypeDataMeshPhysX_getRenderInstance(const UParticleModuleTypeDataMeshPhysX *mod);
    void ParticleModuleTypeDataMeshPhysX_setRenderInstance(UParticleModuleTypeDataMeshPhysX *mod, struct FPointer val);
    struct FPhysXEmitterVerticalLodProperties *ParticleModuleTypeDataMeshPhysX_getVerticalLod(const UParticleModuleTypeDataMeshPhysX *mod);
    void ParticleModuleTypeDataMeshPhysX_setVerticalLod(UParticleModuleTypeDataMeshPhysX *mod, struct FPhysXEmitterVerticalLodProperties val);
    struct FPhysXEmitterVerticalLodProperties *ParticleModuleTypeDataPhysX_getVerticalLod(const UParticleModuleTypeDataPhysX *mod);
    void ParticleModuleTypeDataPhysX_setVerticalLod(UParticleModuleTypeDataPhysX *mod, struct FPhysXEmitterVerticalLodProperties val);
    int ParticleModuleTypeDataRibbon_getbDeadTrailsOnDeactivate(const UParticleModuleTypeDataRibbon *mod);
    void ParticleModuleTypeDataRibbon_setbDeadTrailsOnDeactivate(UParticleModuleTypeDataRibbon *mod, int val);
    int ParticleModuleTypeDataRibbon_getbDeadTrailsOnSourceLoss(const UParticleModuleTypeDataRibbon *mod);
    void ParticleModuleTypeDataRibbon_setbDeadTrailsOnSourceLoss(UParticleModuleTypeDataRibbon *mod, int val);
    int ParticleModuleTypeDataRibbon_getbClipSourceSegement(const UParticleModuleTypeDataRibbon *mod);
    void ParticleModuleTypeDataRibbon_setbClipSourceSegement(UParticleModuleTypeDataRibbon *mod, int val);
    int ParticleModuleTypeDataRibbon_getbEnablePreviousTangentRecalculation(const UParticleModuleTypeDataRibbon *mod);
    void ParticleModuleTypeDataRibbon_setbEnablePreviousTangentRecalculation(UParticleModuleTypeDataRibbon *mod, int val);
    int ParticleModuleTypeDataRibbon_getbTangentRecalculationEveryFrame(const UParticleModuleTypeDataRibbon *mod);
    void ParticleModuleTypeDataRibbon_setbTangentRecalculationEveryFrame(UParticleModuleTypeDataRibbon *mod, int val);
    int ParticleModuleTypeDataRibbon_getbRenderGeometry(const UParticleModuleTypeDataRibbon *mod);
    void ParticleModuleTypeDataRibbon_setbRenderGeometry(UParticleModuleTypeDataRibbon *mod, int val);
    int ParticleModuleTypeDataRibbon_getbRenderSpawnPoints(const UParticleModuleTypeDataRibbon *mod);
    void ParticleModuleTypeDataRibbon_setbRenderSpawnPoints(UParticleModuleTypeDataRibbon *mod, int val);
    int ParticleModuleTypeDataRibbon_getbRenderTangents(const UParticleModuleTypeDataRibbon *mod);
    void ParticleModuleTypeDataRibbon_setbRenderTangents(UParticleModuleTypeDataRibbon *mod, int val);
    int ParticleModuleTypeDataRibbon_getbRenderTessellation(const UParticleModuleTypeDataRibbon *mod);
    void ParticleModuleTypeDataRibbon_setbRenderTessellation(UParticleModuleTypeDataRibbon *mod, int val);
    int ParticleModuleTypeDataTrail_getRenderGeometry(const UParticleModuleTypeDataTrail *mod);
    void ParticleModuleTypeDataTrail_setRenderGeometry(UParticleModuleTypeDataTrail *mod, int val);
    int ParticleModuleTypeDataTrail_getRenderLines(const UParticleModuleTypeDataTrail *mod);
    void ParticleModuleTypeDataTrail_setRenderLines(UParticleModuleTypeDataTrail *mod, int val);
    int ParticleModuleTypeDataTrail_getRenderTessellation(const UParticleModuleTypeDataTrail *mod);
    void ParticleModuleTypeDataTrail_setRenderTessellation(UParticleModuleTypeDataTrail *mod, int val);
    int ParticleModuleTypeDataTrail_getTapered(const UParticleModuleTypeDataTrail *mod);
    void ParticleModuleTypeDataTrail_setTapered(UParticleModuleTypeDataTrail *mod, int val);
    int ParticleModuleTypeDataTrail_getSpawnByDistance(const UParticleModuleTypeDataTrail *mod);
    void ParticleModuleTypeDataTrail_setSpawnByDistance(UParticleModuleTypeDataTrail *mod, int val);
    struct FRawDistributionFloat *ParticleModuleTypeDataTrail_getTension(const UParticleModuleTypeDataTrail *mod);
    void ParticleModuleTypeDataTrail_setTension(UParticleModuleTypeDataTrail *mod, struct FRawDistributionFloat val);
    struct FVector *ParticleModuleTypeDataTrail_getSpawnDistance(const UParticleModuleTypeDataTrail *mod);
    void ParticleModuleTypeDataTrail_setSpawnDistance(UParticleModuleTypeDataTrail *mod, struct FVector val);
    int ParticleModuleTypeDataTrail2_getbClipSourceSegement(const UParticleModuleTypeDataTrail2 *mod);
    void ParticleModuleTypeDataTrail2_setbClipSourceSegement(UParticleModuleTypeDataTrail2 *mod, int val);
    int ParticleModuleTypeDataTrail2_getbClearTangents(const UParticleModuleTypeDataTrail2 *mod);
    void ParticleModuleTypeDataTrail2_setbClearTangents(UParticleModuleTypeDataTrail2 *mod, int val);
    int ParticleModuleTypeDataTrail2_getRenderGeometry(const UParticleModuleTypeDataTrail2 *mod);
    void ParticleModuleTypeDataTrail2_setRenderGeometry(UParticleModuleTypeDataTrail2 *mod, int val);
    int ParticleModuleTypeDataTrail2_getRenderDirectLine(const UParticleModuleTypeDataTrail2 *mod);
    void ParticleModuleTypeDataTrail2_setRenderDirectLine(UParticleModuleTypeDataTrail2 *mod, int val);
    int ParticleModuleTypeDataTrail2_getRenderLines(const UParticleModuleTypeDataTrail2 *mod);
    void ParticleModuleTypeDataTrail2_setRenderLines(UParticleModuleTypeDataTrail2 *mod, int val);
    int ParticleModuleTypeDataTrail2_getRenderTessellation(const UParticleModuleTypeDataTrail2 *mod);
    void ParticleModuleTypeDataTrail2_setRenderTessellation(UParticleModuleTypeDataTrail2 *mod, int val);
    TArray< struct FName > *ParticleModuleUberBase_getRequiredModules(const UParticleModuleUberBase *mod);
    void ParticleModuleUberBase_setRequiredModules(UParticleModuleUberBase *mod, TArray< struct FName > val);
    struct FRawDistributionFloat *ParticleModuleUberLTISIVCL_getLifetime(const UParticleModuleUberLTISIVCL *mod);
    void ParticleModuleUberLTISIVCL_setLifetime(UParticleModuleUberLTISIVCL *mod, struct FRawDistributionFloat val);
    struct FRawDistributionVector *ParticleModuleUberLTISIVCL_getStartSize(const UParticleModuleUberLTISIVCL *mod);
    void ParticleModuleUberLTISIVCL_setStartSize(UParticleModuleUberLTISIVCL *mod, struct FRawDistributionVector val);
    struct FRawDistributionVector *ParticleModuleUberLTISIVCL_getStartVelocity(const UParticleModuleUberLTISIVCL *mod);
    void ParticleModuleUberLTISIVCL_setStartVelocity(UParticleModuleUberLTISIVCL *mod, struct FRawDistributionVector val);
    struct FRawDistributionFloat *ParticleModuleUberLTISIVCL_getStartVelocityRadial(const UParticleModuleUberLTISIVCL *mod);
    void ParticleModuleUberLTISIVCL_setStartVelocityRadial(UParticleModuleUberLTISIVCL *mod, struct FRawDistributionFloat val);
    struct FRawDistributionVector *ParticleModuleUberLTISIVCL_getColorOverLife(const UParticleModuleUberLTISIVCL *mod);
    void ParticleModuleUberLTISIVCL_setColorOverLife(UParticleModuleUberLTISIVCL *mod, struct FRawDistributionVector val);
    struct FRawDistributionFloat *ParticleModuleUberLTISIVCL_getAlphaOverLife(const UParticleModuleUberLTISIVCL *mod);
    void ParticleModuleUberLTISIVCL_setAlphaOverLife(UParticleModuleUberLTISIVCL *mod, struct FRawDistributionFloat val);
    struct FRawDistributionFloat *ParticleModuleUberLTISIVCLIL_getLifetime(const UParticleModuleUberLTISIVCLIL *mod);
    void ParticleModuleUberLTISIVCLIL_setLifetime(UParticleModuleUberLTISIVCLIL *mod, struct FRawDistributionFloat val);
    struct FRawDistributionVector *ParticleModuleUberLTISIVCLIL_getStartSize(const UParticleModuleUberLTISIVCLIL *mod);
    void ParticleModuleUberLTISIVCLIL_setStartSize(UParticleModuleUberLTISIVCLIL *mod, struct FRawDistributionVector val);
    struct FRawDistributionVector *ParticleModuleUberLTISIVCLIL_getStartVelocity(const UParticleModuleUberLTISIVCLIL *mod);
    void ParticleModuleUberLTISIVCLIL_setStartVelocity(UParticleModuleUberLTISIVCLIL *mod, struct FRawDistributionVector val);
    struct FRawDistributionFloat *ParticleModuleUberLTISIVCLIL_getStartVelocityRadial(const UParticleModuleUberLTISIVCLIL *mod);
    void ParticleModuleUberLTISIVCLIL_setStartVelocityRadial(UParticleModuleUberLTISIVCLIL *mod, struct FRawDistributionFloat val);
    struct FRawDistributionVector *ParticleModuleUberLTISIVCLIL_getColorOverLife(const UParticleModuleUberLTISIVCLIL *mod);
    void ParticleModuleUberLTISIVCLIL_setColorOverLife(UParticleModuleUberLTISIVCLIL *mod, struct FRawDistributionVector val);
    struct FRawDistributionFloat *ParticleModuleUberLTISIVCLIL_getAlphaOverLife(const UParticleModuleUberLTISIVCLIL *mod);
    void ParticleModuleUberLTISIVCLIL_setAlphaOverLife(UParticleModuleUberLTISIVCLIL *mod, struct FRawDistributionFloat val);
    struct FRawDistributionVector *ParticleModuleUberLTISIVCLIL_getStartLocation(const UParticleModuleUberLTISIVCLIL *mod);
    void ParticleModuleUberLTISIVCLIL_setStartLocation(UParticleModuleUberLTISIVCLIL *mod, struct FRawDistributionVector val);
    struct FRawDistributionFloat *ParticleModuleUberLTISIVCLILIRSSBLIRR_getLifetime(const UParticleModuleUberLTISIVCLILIRSSBLIRR *mod);
    void ParticleModuleUberLTISIVCLILIRSSBLIRR_setLifetime(UParticleModuleUberLTISIVCLILIRSSBLIRR *mod, struct FRawDistributionFloat val);
    struct FRawDistributionVector *ParticleModuleUberLTISIVCLILIRSSBLIRR_getStartSize(const UParticleModuleUberLTISIVCLILIRSSBLIRR *mod);
    void ParticleModuleUberLTISIVCLILIRSSBLIRR_setStartSize(UParticleModuleUberLTISIVCLILIRSSBLIRR *mod, struct FRawDistributionVector val);
    struct FRawDistributionVector *ParticleModuleUberLTISIVCLILIRSSBLIRR_getStartVelocity(const UParticleModuleUberLTISIVCLILIRSSBLIRR *mod);
    void ParticleModuleUberLTISIVCLILIRSSBLIRR_setStartVelocity(UParticleModuleUberLTISIVCLILIRSSBLIRR *mod, struct FRawDistributionVector val);
    struct FRawDistributionFloat *ParticleModuleUberLTISIVCLILIRSSBLIRR_getStartVelocityRadial(const UParticleModuleUberLTISIVCLILIRSSBLIRR *mod);
    void ParticleModuleUberLTISIVCLILIRSSBLIRR_setStartVelocityRadial(UParticleModuleUberLTISIVCLILIRSSBLIRR *mod, struct FRawDistributionFloat val);
    struct FRawDistributionVector *ParticleModuleUberLTISIVCLILIRSSBLIRR_getColorOverLife(const UParticleModuleUberLTISIVCLILIRSSBLIRR *mod);
    void ParticleModuleUberLTISIVCLILIRSSBLIRR_setColorOverLife(UParticleModuleUberLTISIVCLILIRSSBLIRR *mod, struct FRawDistributionVector val);
    struct FRawDistributionFloat *ParticleModuleUberLTISIVCLILIRSSBLIRR_getAlphaOverLife(const UParticleModuleUberLTISIVCLILIRSSBLIRR *mod);
    void ParticleModuleUberLTISIVCLILIRSSBLIRR_setAlphaOverLife(UParticleModuleUberLTISIVCLILIRSSBLIRR *mod, struct FRawDistributionFloat val);
    struct FRawDistributionVector *ParticleModuleUberLTISIVCLILIRSSBLIRR_getStartLocation(const UParticleModuleUberLTISIVCLILIRSSBLIRR *mod);
    void ParticleModuleUberLTISIVCLILIRSSBLIRR_setStartLocation(UParticleModuleUberLTISIVCLILIRSSBLIRR *mod, struct FRawDistributionVector val);
    struct FRawDistributionFloat *ParticleModuleUberLTISIVCLILIRSSBLIRR_getStartRotation(const UParticleModuleUberLTISIVCLILIRSSBLIRR *mod);
    void ParticleModuleUberLTISIVCLILIRSSBLIRR_setStartRotation(UParticleModuleUberLTISIVCLILIRSSBLIRR *mod, struct FRawDistributionFloat val);
    struct FRawDistributionVector *ParticleModuleUberLTISIVCLILIRSSBLIRR_getSizeLifeMultiplier(const UParticleModuleUberLTISIVCLILIRSSBLIRR *mod);
    void ParticleModuleUberLTISIVCLILIRSSBLIRR_setSizeLifeMultiplier(UParticleModuleUberLTISIVCLILIRSSBLIRR *mod, struct FRawDistributionVector val);
    int ParticleModuleUberLTISIVCLILIRSSBLIRR_getSizeMultiplyX(const UParticleModuleUberLTISIVCLILIRSSBLIRR *mod);
    void ParticleModuleUberLTISIVCLILIRSSBLIRR_setSizeMultiplyX(UParticleModuleUberLTISIVCLILIRSSBLIRR *mod, int val);
    int ParticleModuleUberLTISIVCLILIRSSBLIRR_getSizeMultiplyY(const UParticleModuleUberLTISIVCLILIRSSBLIRR *mod);
    void ParticleModuleUberLTISIVCLILIRSSBLIRR_setSizeMultiplyY(UParticleModuleUberLTISIVCLILIRSSBLIRR *mod, int val);
    int ParticleModuleUberLTISIVCLILIRSSBLIRR_getSizeMultiplyZ(const UParticleModuleUberLTISIVCLILIRSSBLIRR *mod);
    void ParticleModuleUberLTISIVCLILIRSSBLIRR_setSizeMultiplyZ(UParticleModuleUberLTISIVCLILIRSSBLIRR *mod, int val);
    struct FRawDistributionFloat *ParticleModuleUberLTISIVCLILIRSSBLIRR_getStartRotationRate(const UParticleModuleUberLTISIVCLILIRSSBLIRR *mod);
    void ParticleModuleUberLTISIVCLILIRSSBLIRR_setStartRotationRate(UParticleModuleUberLTISIVCLILIRSSBLIRR *mod, struct FRawDistributionFloat val);
    struct FVector *ParticleModuleUberRainDrops_getStartSizeMin(const UParticleModuleUberRainDrops *mod);
    void ParticleModuleUberRainDrops_setStartSizeMin(UParticleModuleUberRainDrops *mod, struct FVector val);
    struct FVector *ParticleModuleUberRainDrops_getStartSizeMax(const UParticleModuleUberRainDrops *mod);
    void ParticleModuleUberRainDrops_setStartSizeMax(UParticleModuleUberRainDrops *mod, struct FVector val);
    struct FVector *ParticleModuleUberRainDrops_getStartVelocityMin(const UParticleModuleUberRainDrops *mod);
    void ParticleModuleUberRainDrops_setStartVelocityMin(UParticleModuleUberRainDrops *mod, struct FVector val);
    struct FVector *ParticleModuleUberRainDrops_getStartVelocityMax(const UParticleModuleUberRainDrops *mod);
    void ParticleModuleUberRainDrops_setStartVelocityMax(UParticleModuleUberRainDrops *mod, struct FVector val);
    struct FVector *ParticleModuleUberRainDrops_getColorOverLife(const UParticleModuleUberRainDrops *mod);
    void ParticleModuleUberRainDrops_setColorOverLife(UParticleModuleUberRainDrops *mod, struct FVector val);
    int ParticleModuleUberRainDrops_getbIsUsingCylinder(const UParticleModuleUberRainDrops *mod);
    void ParticleModuleUberRainDrops_setbIsUsingCylinder(UParticleModuleUberRainDrops *mod, int val);
    int ParticleModuleUberRainDrops_getbPositive_X(const UParticleModuleUberRainDrops *mod);
    void ParticleModuleUberRainDrops_setbPositive_X(UParticleModuleUberRainDrops *mod, int val);
    int ParticleModuleUberRainDrops_getbPositive_Y(const UParticleModuleUberRainDrops *mod);
    void ParticleModuleUberRainDrops_setbPositive_Y(UParticleModuleUberRainDrops *mod, int val);
    int ParticleModuleUberRainDrops_getbPositive_Z(const UParticleModuleUberRainDrops *mod);
    void ParticleModuleUberRainDrops_setbPositive_Z(UParticleModuleUberRainDrops *mod, int val);
    int ParticleModuleUberRainDrops_getbNegative_X(const UParticleModuleUberRainDrops *mod);
    void ParticleModuleUberRainDrops_setbNegative_X(UParticleModuleUberRainDrops *mod, int val);
    int ParticleModuleUberRainDrops_getbNegative_Y(const UParticleModuleUberRainDrops *mod);
    void ParticleModuleUberRainDrops_setbNegative_Y(UParticleModuleUberRainDrops *mod, int val);
    int ParticleModuleUberRainDrops_getbNegative_Z(const UParticleModuleUberRainDrops *mod);
    void ParticleModuleUberRainDrops_setbNegative_Z(UParticleModuleUberRainDrops *mod, int val);
    int ParticleModuleUberRainDrops_getbSurfaceOnly(const UParticleModuleUberRainDrops *mod);
    void ParticleModuleUberRainDrops_setbSurfaceOnly(UParticleModuleUberRainDrops *mod, int val);
    int ParticleModuleUberRainDrops_getbVelocity(const UParticleModuleUberRainDrops *mod);
    void ParticleModuleUberRainDrops_setbVelocity(UParticleModuleUberRainDrops *mod, int val);
    int ParticleModuleUberRainDrops_getbRadialVelocity(const UParticleModuleUberRainDrops *mod);
    void ParticleModuleUberRainDrops_setbRadialVelocity(UParticleModuleUberRainDrops *mod, int val);
    struct FVector *ParticleModuleUberRainDrops_getPC_StartLocation(const UParticleModuleUberRainDrops *mod);
    void ParticleModuleUberRainDrops_setPC_StartLocation(UParticleModuleUberRainDrops *mod, struct FVector val);
    struct FVector *ParticleModuleUberRainDrops_getStartLocationMin(const UParticleModuleUberRainDrops *mod);
    void ParticleModuleUberRainDrops_setStartLocationMin(UParticleModuleUberRainDrops *mod, struct FVector val);
    struct FVector *ParticleModuleUberRainDrops_getStartLocationMax(const UParticleModuleUberRainDrops *mod);
    void ParticleModuleUberRainDrops_setStartLocationMax(UParticleModuleUberRainDrops *mod, struct FVector val);
    struct FRawDistributionFloat *ParticleModuleUberRainImpacts_getLifetime(const UParticleModuleUberRainImpacts *mod);
    void ParticleModuleUberRainImpacts_setLifetime(UParticleModuleUberRainImpacts *mod, struct FRawDistributionFloat val);
    struct FRawDistributionVector *ParticleModuleUberRainImpacts_getStartSize(const UParticleModuleUberRainImpacts *mod);
    void ParticleModuleUberRainImpacts_setStartSize(UParticleModuleUberRainImpacts *mod, struct FRawDistributionVector val);
    struct FRawDistributionVector *ParticleModuleUberRainImpacts_getStartRotation(const UParticleModuleUberRainImpacts *mod);
    void ParticleModuleUberRainImpacts_setStartRotation(UParticleModuleUberRainImpacts *mod, struct FRawDistributionVector val);
    int ParticleModuleUberRainImpacts_getbInheritParent(const UParticleModuleUberRainImpacts *mod);
    void ParticleModuleUberRainImpacts_setbInheritParent(UParticleModuleUberRainImpacts *mod, int val);
    int ParticleModuleUberRainImpacts_getMultiplyX(const UParticleModuleUberRainImpacts *mod);
    void ParticleModuleUberRainImpacts_setMultiplyX(UParticleModuleUberRainImpacts *mod, int val);
    int ParticleModuleUberRainImpacts_getMultiplyY(const UParticleModuleUberRainImpacts *mod);
    void ParticleModuleUberRainImpacts_setMultiplyY(UParticleModuleUberRainImpacts *mod, int val);
    int ParticleModuleUberRainImpacts_getMultiplyZ(const UParticleModuleUberRainImpacts *mod);
    void ParticleModuleUberRainImpacts_setMultiplyZ(UParticleModuleUberRainImpacts *mod, int val);
    int ParticleModuleUberRainImpacts_getbIsUsingCylinder(const UParticleModuleUberRainImpacts *mod);
    void ParticleModuleUberRainImpacts_setbIsUsingCylinder(UParticleModuleUberRainImpacts *mod, int val);
    int ParticleModuleUberRainImpacts_getbPositive_X(const UParticleModuleUberRainImpacts *mod);
    void ParticleModuleUberRainImpacts_setbPositive_X(UParticleModuleUberRainImpacts *mod, int val);
    int ParticleModuleUberRainImpacts_getbPositive_Y(const UParticleModuleUberRainImpacts *mod);
    void ParticleModuleUberRainImpacts_setbPositive_Y(UParticleModuleUberRainImpacts *mod, int val);
    int ParticleModuleUberRainImpacts_getbPositive_Z(const UParticleModuleUberRainImpacts *mod);
    void ParticleModuleUberRainImpacts_setbPositive_Z(UParticleModuleUberRainImpacts *mod, int val);
    int ParticleModuleUberRainImpacts_getbNegative_X(const UParticleModuleUberRainImpacts *mod);
    void ParticleModuleUberRainImpacts_setbNegative_X(UParticleModuleUberRainImpacts *mod, int val);
    int ParticleModuleUberRainImpacts_getbNegative_Y(const UParticleModuleUberRainImpacts *mod);
    void ParticleModuleUberRainImpacts_setbNegative_Y(UParticleModuleUberRainImpacts *mod, int val);
    int ParticleModuleUberRainImpacts_getbNegative_Z(const UParticleModuleUberRainImpacts *mod);
    void ParticleModuleUberRainImpacts_setbNegative_Z(UParticleModuleUberRainImpacts *mod, int val);
    int ParticleModuleUberRainImpacts_getbSurfaceOnly(const UParticleModuleUberRainImpacts *mod);
    void ParticleModuleUberRainImpacts_setbSurfaceOnly(UParticleModuleUberRainImpacts *mod, int val);
    int ParticleModuleUberRainImpacts_getbVelocity(const UParticleModuleUberRainImpacts *mod);
    void ParticleModuleUberRainImpacts_setbVelocity(UParticleModuleUberRainImpacts *mod, int val);
    int ParticleModuleUberRainImpacts_getbRadialVelocity(const UParticleModuleUberRainImpacts *mod);
    void ParticleModuleUberRainImpacts_setbRadialVelocity(UParticleModuleUberRainImpacts *mod, int val);
    struct FRawDistributionVector *ParticleModuleUberRainImpacts_getLifeMultiplier(const UParticleModuleUberRainImpacts *mod);
    void ParticleModuleUberRainImpacts_setLifeMultiplier(UParticleModuleUberRainImpacts *mod, struct FRawDistributionVector val);
    struct FRawDistributionFloat *ParticleModuleUberRainImpacts_getPC_VelocityScale(const UParticleModuleUberRainImpacts *mod);
    void ParticleModuleUberRainImpacts_setPC_VelocityScale(UParticleModuleUberRainImpacts *mod, struct FRawDistributionFloat val);
    struct FRawDistributionVector *ParticleModuleUberRainImpacts_getPC_StartLocation(const UParticleModuleUberRainImpacts *mod);
    void ParticleModuleUberRainImpacts_setPC_StartLocation(UParticleModuleUberRainImpacts *mod, struct FRawDistributionVector val);
    struct FRawDistributionFloat *ParticleModuleUberRainImpacts_getPC_StartRadius(const UParticleModuleUberRainImpacts *mod);
    void ParticleModuleUberRainImpacts_setPC_StartRadius(UParticleModuleUberRainImpacts *mod, struct FRawDistributionFloat val);
    struct FRawDistributionFloat *ParticleModuleUberRainImpacts_getPC_StartHeight(const UParticleModuleUberRainImpacts *mod);
    void ParticleModuleUberRainImpacts_setPC_StartHeight(UParticleModuleUberRainImpacts *mod, struct FRawDistributionFloat val);
    struct FRawDistributionVector *ParticleModuleUberRainImpacts_getColorOverLife(const UParticleModuleUberRainImpacts *mod);
    void ParticleModuleUberRainImpacts_setColorOverLife(UParticleModuleUberRainImpacts *mod, struct FRawDistributionVector val);
    struct FRawDistributionFloat *ParticleModuleUberRainImpacts_getAlphaOverLife(const UParticleModuleUberRainImpacts *mod);
    void ParticleModuleUberRainImpacts_setAlphaOverLife(UParticleModuleUberRainImpacts *mod, struct FRawDistributionFloat val);
    struct FRawDistributionFloat *ParticleModuleUberRainSplashA_getLifetime(const UParticleModuleUberRainSplashA *mod);
    void ParticleModuleUberRainSplashA_setLifetime(UParticleModuleUberRainSplashA *mod, struct FRawDistributionFloat val);
    struct FRawDistributionVector *ParticleModuleUberRainSplashA_getStartSize(const UParticleModuleUberRainSplashA *mod);
    void ParticleModuleUberRainSplashA_setStartSize(UParticleModuleUberRainSplashA *mod, struct FRawDistributionVector val);
    struct FRawDistributionVector *ParticleModuleUberRainSplashA_getStartRotation(const UParticleModuleUberRainSplashA *mod);
    void ParticleModuleUberRainSplashA_setStartRotation(UParticleModuleUberRainSplashA *mod, struct FRawDistributionVector val);
    int ParticleModuleUberRainSplashA_getbInheritParent(const UParticleModuleUberRainSplashA *mod);
    void ParticleModuleUberRainSplashA_setbInheritParent(UParticleModuleUberRainSplashA *mod, int val);
    int ParticleModuleUberRainSplashA_getMultiplyX(const UParticleModuleUberRainSplashA *mod);
    void ParticleModuleUberRainSplashA_setMultiplyX(UParticleModuleUberRainSplashA *mod, int val);
    int ParticleModuleUberRainSplashA_getMultiplyY(const UParticleModuleUberRainSplashA *mod);
    void ParticleModuleUberRainSplashA_setMultiplyY(UParticleModuleUberRainSplashA *mod, int val);
    int ParticleModuleUberRainSplashA_getMultiplyZ(const UParticleModuleUberRainSplashA *mod);
    void ParticleModuleUberRainSplashA_setMultiplyZ(UParticleModuleUberRainSplashA *mod, int val);
    struct FRawDistributionVector *ParticleModuleUberRainSplashA_getLifeMultiplier(const UParticleModuleUberRainSplashA *mod);
    void ParticleModuleUberRainSplashA_setLifeMultiplier(UParticleModuleUberRainSplashA *mod, struct FRawDistributionVector val);
    struct FRawDistributionVector *ParticleModuleUberRainSplashA_getColorOverLife(const UParticleModuleUberRainSplashA *mod);
    void ParticleModuleUberRainSplashA_setColorOverLife(UParticleModuleUberRainSplashA *mod, struct FRawDistributionVector val);
    struct FRawDistributionFloat *ParticleModuleUberRainSplashA_getAlphaOverLife(const UParticleModuleUberRainSplashA *mod);
    void ParticleModuleUberRainSplashA_setAlphaOverLife(UParticleModuleUberRainSplashA *mod, struct FRawDistributionFloat val);
    struct FRawDistributionFloat *ParticleModuleUberRainSplashB_getLifetime(const UParticleModuleUberRainSplashB *mod);
    void ParticleModuleUberRainSplashB_setLifetime(UParticleModuleUberRainSplashB *mod, struct FRawDistributionFloat val);
    struct FRawDistributionVector *ParticleModuleUberRainSplashB_getStartSize(const UParticleModuleUberRainSplashB *mod);
    void ParticleModuleUberRainSplashB_setStartSize(UParticleModuleUberRainSplashB *mod, struct FRawDistributionVector val);
    struct FRawDistributionVector *ParticleModuleUberRainSplashB_getColorOverLife(const UParticleModuleUberRainSplashB *mod);
    void ParticleModuleUberRainSplashB_setColorOverLife(UParticleModuleUberRainSplashB *mod, struct FRawDistributionVector val);
    struct FRawDistributionFloat *ParticleModuleUberRainSplashB_getAlphaOverLife(const UParticleModuleUberRainSplashB *mod);
    void ParticleModuleUberRainSplashB_setAlphaOverLife(UParticleModuleUberRainSplashB *mod, struct FRawDistributionFloat val);
    struct FRawDistributionVector *ParticleModuleUberRainSplashB_getLifeMultiplier(const UParticleModuleUberRainSplashB *mod);
    void ParticleModuleUberRainSplashB_setLifeMultiplier(UParticleModuleUberRainSplashB *mod, struct FRawDistributionVector val);
    int ParticleModuleUberRainSplashB_getMultiplyX(const UParticleModuleUberRainSplashB *mod);
    void ParticleModuleUberRainSplashB_setMultiplyX(UParticleModuleUberRainSplashB *mod, int val);
    int ParticleModuleUberRainSplashB_getMultiplyY(const UParticleModuleUberRainSplashB *mod);
    void ParticleModuleUberRainSplashB_setMultiplyY(UParticleModuleUberRainSplashB *mod, int val);
    int ParticleModuleUberRainSplashB_getMultiplyZ(const UParticleModuleUberRainSplashB *mod);
    void ParticleModuleUberRainSplashB_setMultiplyZ(UParticleModuleUberRainSplashB *mod, int val);
    struct FRawDistributionFloat *ParticleModuleUberRainSplashB_getStartRotationRate(const UParticleModuleUberRainSplashB *mod);
    void ParticleModuleUberRainSplashB_setStartRotationRate(UParticleModuleUberRainSplashB *mod, struct FRawDistributionFloat val);
    int ParticleModuleVelocityBase_getbInWorldSpace(const UParticleModuleVelocityBase *mod);
    void ParticleModuleVelocityBase_setbInWorldSpace(UParticleModuleVelocityBase *mod, int val);
    int ParticleModuleVelocityBase_getbApplyOwnerScale(const UParticleModuleVelocityBase *mod);
    void ParticleModuleVelocityBase_setbApplyOwnerScale(UParticleModuleVelocityBase *mod, int val);
    struct FRawDistributionVector *ParticleModuleVelocity_getStartVelocity(const UParticleModuleVelocity *mod);
    void ParticleModuleVelocity_setStartVelocity(UParticleModuleVelocity *mod, struct FRawDistributionVector val);
    struct FRawDistributionFloat *ParticleModuleVelocity_getStartVelocityRadial(const UParticleModuleVelocity *mod);
    void ParticleModuleVelocity_setStartVelocityRadial(UParticleModuleVelocity *mod, struct FRawDistributionFloat val);
    struct FParticleRandomSeedInfo *ParticleModuleVelocity_Seeded_getRandomSeedInfo(const UParticleModuleVelocity_Seeded *mod);
    void ParticleModuleVelocity_Seeded_setRandomSeedInfo(UParticleModuleVelocity_Seeded *mod, struct FParticleRandomSeedInfo val);
    struct FRawDistributionVector *ParticleModuleVelocityInheritParent_getScale(const UParticleModuleVelocityInheritParent *mod);
    void ParticleModuleVelocityInheritParent_setScale(UParticleModuleVelocityInheritParent *mod, struct FRawDistributionVector val);
    struct FRawDistributionVector *ParticleModuleVelocityOverLifetime_getVelOverLife(const UParticleModuleVelocityOverLifetime *mod);
    void ParticleModuleVelocityOverLifetime_setVelOverLife(UParticleModuleVelocityOverLifetime *mod, struct FRawDistributionVector val);
    int ParticleModuleVelocityOverLifetime_getAbsolute(const UParticleModuleVelocityOverLifetime *mod);
    void ParticleModuleVelocityOverLifetime_setAbsolute(UParticleModuleVelocityOverLifetime *mod, int val);

    // Cast helper
    template<typename T>
    T *ParticleModule_cast(UParticleModule *mod)
    {
        return mod->IsA(T::StaticClass()) ? (T *)mod : NULL;
    }

    // Struct address accessors
    TArray<float>* RawDistribution_getTable(const FRawDistribution *distrib);
    void RawDistribution_setTable(FRawDistribution *distrib, TArray<float> val);

    TArray<UParticleEmitter *>* ParticleSystem_getEmitters(const UParticleSystem *ps);
    void ParticleSystem_setEmitters(UParticleSystem *ps, TArray<UParticleEmitter *> val);
    TArray<UParticleLODLevel *>* ParticleEmitter_getLODLevels(const UParticleEmitter *ps);
    void ParticleEmitter_setLODLevels(UParticleEmitter *ps, TArray<UParticleLODLevel *> val);
    TArray<UParticleModule *>* ParticleLODLevel_getSpawnModules(const UParticleLODLevel *ps);
    void ParticleLODLevel_setSpawnModules(UParticleLODLevel *ps, TArray<UParticleModule *> val);
    TArray<UParticleModule *>* ParticleLODLevel_getUpdateModules(const UParticleLODLevel *ps);
    void ParticleLODLevel_setUpdateModules(UParticleLODLevel *ps, TArray<UParticleModule *> val);
}
